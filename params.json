{"name":"Sunflower-ioc","tagline":"Java编写的ioc工具","body":"\r\n这是一个基于注解的简易ioc工具, 为什么要重复造轮子呢, 只是为了好玩.:grin:\r\n\r\n### 用法\r\n\r\n在Class上使用`@Bean`标注一个对象需要容器管理;\r\n\r\n在Field上使用`@Resource`标注依赖, 该field需要提供setter器.\r\n\r\n#### 示例\r\n```java\r\n@Bean(\"jack\")\r\npublic class Person {\r\n\r\n    private String name = \"jack\";\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n}\r\n\r\n@Bean(\"hi\")\r\npublic class Hi {\r\n    @Resource(\"jack\")\r\n    private Person person;\r\n\r\n    /**\r\n     * Say Hello\r\n     */\r\n    public void sayHello() {\r\n\r\n        System.out.println(\"Hello \" + person.getName());\r\n\r\n    }\r\n\r\n    public void setPerson(Person person) {\r\n        this.person = person;\r\n    }\r\n}\r\n```\r\n\r\n#### 注入示例\r\n```java\r\nSet<Class<?>> classes = new Scanner().scanPackage(\"com.mlongbo.sunflower.ioc.bean\");\r\n\r\nBeanContext.me().init(classes);\r\n\r\nHi hi = (Hi) BeanContext.me().getBean(\"hi\");\r\nhi.sayHello();\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}